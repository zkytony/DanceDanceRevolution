TimeQuest Timing Analyzer report for dancedance
Fri May 30 19:31:21 2014
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock_divider:divider|divided_clocks[10]'
 12. Slow Model Setup: 'CLOCK_50'
 13. Slow Model Setup: 'clk_SPD[0]'
 14. Slow Model Hold: 'clk_SPD[0]'
 15. Slow Model Hold: 'CLOCK_50'
 16. Slow Model Hold: 'clock_divider:divider|divided_clocks[10]'
 17. Slow Model Minimum Pulse Width: 'clk_SPD[0]'
 18. Slow Model Minimum Pulse Width: 'CLOCK_50'
 19. Slow Model Minimum Pulse Width: 'clock_divider:divider|divided_clocks[10]'
 20. Setup Times
 21. Hold Times
 22. Clock to Output Times
 23. Minimum Clock to Output Times
 24. Fast Model Setup Summary
 25. Fast Model Hold Summary
 26. Fast Model Recovery Summary
 27. Fast Model Removal Summary
 28. Fast Model Minimum Pulse Width Summary
 29. Fast Model Setup: 'clock_divider:divider|divided_clocks[10]'
 30. Fast Model Setup: 'CLOCK_50'
 31. Fast Model Setup: 'clk_SPD[0]'
 32. Fast Model Hold: 'clk_SPD[0]'
 33. Fast Model Hold: 'CLOCK_50'
 34. Fast Model Hold: 'clock_divider:divider|divided_clocks[10]'
 35. Fast Model Minimum Pulse Width: 'clk_SPD[0]'
 36. Fast Model Minimum Pulse Width: 'CLOCK_50'
 37. Fast Model Minimum Pulse Width: 'clock_divider:divider|divided_clocks[10]'
 38. Setup Times
 39. Hold Times
 40. Clock to Output Times
 41. Minimum Clock to Output Times
 42. Multicorner Timing Analysis Summary
 43. Setup Times
 44. Hold Times
 45. Clock to Output Times
 46. Minimum Clock to Output Times
 47. Setup Transfers
 48. Hold Transfers
 49. Report TCCS
 50. Report RSKM
 51. Unconstrained Paths
 52. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; dancedance                                                        ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


Parallel compilation was disabled, but you have multiple processors available. Enable parallel compilation to reduce compilation time.
+-------------------------------------+
; Parallel Compilation                ;
+----------------------------+--------+
; Processors                 ; Number ;
+----------------------------+--------+
; Number detected on machine ; 4      ;
; Maximum allowed            ; 1      ;
+----------------------------+--------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                                                                                             ;
+------------------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------------------+
; Clock Name                               ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets                                      ;
+------------------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------------------+
; clk_SPD[0]                               ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clk_SPD[0] }                               ;
; CLOCK_50                                 ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { CLOCK_50 }                                 ;
; clock_divider:divider|divided_clocks[10] ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock_divider:divider|divided_clocks[10] } ;
+------------------------------------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+----------------------------------------------+


+--------------------------------------------------------------------------------+
; Slow Model Fmax Summary                                                        ;
+------------+-----------------+------------------------------------------+------+
; Fmax       ; Restricted Fmax ; Clock Name                               ; Note ;
+------------+-----------------+------------------------------------------+------+
; 212.13 MHz ; 212.13 MHz      ; CLOCK_50                                 ;      ;
; 231.54 MHz ; 231.54 MHz      ; clk_SPD[0]                               ;      ;
; 299.04 MHz ; 299.04 MHz      ; clock_divider:divider|divided_clocks[10] ;      ;
+------------+-----------------+------------------------------------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+-------------------------------------------------------------------+
; Slow Model Setup Summary                                          ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clock_divider:divider|divided_clocks[10] ; -5.768 ; -356.005      ;
; CLOCK_50                                 ; -3.714 ; -71.454       ;
; clk_SPD[0]                               ; -3.319 ; -140.267      ;
+------------------------------------------+--------+---------------+


+-------------------------------------------------------------------+
; Slow Model Hold Summary                                           ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clk_SPD[0]                               ; -3.122 ; -209.592      ;
; CLOCK_50                                 ; -2.773 ; -29.705       ;
; clock_divider:divider|divided_clocks[10] ; 0.317  ; 0.000         ;
+------------------------------------------+--------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------------------------------+
; Slow Model Minimum Pulse Width Summary                            ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clk_SPD[0]                               ; -1.631 ; -311.095      ;
; CLOCK_50                                 ; -1.631 ; -40.735       ;
; clock_divider:divider|divided_clocks[10] ; -0.611 ; -111.202      ;
+------------------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock_divider:divider|divided_clocks[10]'                                                                                                                                        ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+
; Slack  ; From Node                                  ; To Node                                    ; Launch Clock ; Latch Clock                              ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.768 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.382      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.732 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.346      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.619 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.233      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.607 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.221      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.556 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.170      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.535 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.149      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.524 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.138      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.457 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.071      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.452 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.066      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.418 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 3.032      ;
; -5.352 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.315      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.336 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.950      ;
; -5.321 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.284      ;
; -5.320 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.283      ;
; -5.272 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.235      ;
; -5.266 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.880      ;
; -5.241 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.204      ;
; -5.240 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.203      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.226 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.840      ;
; -5.192 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.155      ;
; -5.161 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.124      ;
; -5.160 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.075     ; 3.123      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
; -5.135 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -3.424     ; 2.749      ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'CLOCK_50'                                                                                                                                       ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                ; To Node                                  ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+
; -3.714 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.542      ;
; -3.634 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.462      ;
; -3.554 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.382      ;
; -3.474 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.302      ;
; -3.447 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.275      ;
; -3.394 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.222      ;
; -3.375 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.203      ;
; -3.367 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.195      ;
; -3.336 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.164      ;
; -3.314 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.142      ;
; -3.295 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.123      ;
; -3.287 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.115      ;
; -3.256 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.084      ;
; -3.234 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.062      ;
; -3.216 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.044      ;
; -3.215 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.043      ;
; -3.207 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.035      ;
; -3.176 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.004      ;
; -3.176 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 4.004      ;
; -3.154 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.982      ;
; -3.136 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.964      ;
; -3.135 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.963      ;
; -3.127 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.955      ;
; -3.096 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.924      ;
; -3.096 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.924      ;
; -3.096 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.924      ;
; -3.056 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.884      ;
; -3.055 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.883      ;
; -3.047 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.875      ;
; -3.016 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.844      ;
; -3.016 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.844      ;
; -3.016 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.844      ;
; -2.983 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.811      ;
; -2.980 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.808      ;
; -2.976 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.804      ;
; -2.975 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.803      ;
; -2.967 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.795      ;
; -2.936 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.764      ;
; -2.936 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.764      ;
; -2.936 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.764      ;
; -2.903 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.731      ;
; -2.900 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.728      ;
; -2.896 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.724      ;
; -2.895 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.723      ;
; -2.887 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.715      ;
; -2.856 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.684      ;
; -2.856 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.684      ;
; -2.856 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.684      ;
; -2.837 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.665      ;
; -2.823 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.651      ;
; -2.820 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.648      ;
; -2.816 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.644      ;
; -2.815 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.643      ;
; -2.776 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.604      ;
; -2.776 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.604      ;
; -2.776 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.604      ;
; -2.757 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.585      ;
; -2.743 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.571      ;
; -2.740 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.568      ;
; -2.736 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.564      ;
; -2.721 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.549      ;
; -2.713 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.541      ;
; -2.698 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.526      ;
; -2.696 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.524      ;
; -2.696 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.524      ;
; -2.677 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.505      ;
; -2.663 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.491      ;
; -2.660 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.488      ;
; -2.656 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.484      ;
; -2.641 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.469      ;
; -2.641 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.469      ;
; -2.633 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.461      ;
; -2.618 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.446      ;
; -2.616 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.444      ;
; -2.616 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.444      ;
; -2.602 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.430      ;
; -2.597 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.425      ;
; -2.583 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.411      ;
; -2.580 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.408      ;
; -2.562 ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.390      ;
; -2.561 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.389      ;
; -2.561 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.389      ;
; -2.553 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.381      ;
; -2.538 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.366      ;
; -2.536 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.364      ;
; -2.522 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.350      ;
; -2.517 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.345      ;
; -2.503 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.331      ;
; -2.500 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.328      ;
; -2.482 ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.310      ;
; -2.482 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.310      ;
; -2.481 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.309      ;
; -2.481 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.309      ;
; -2.473 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.301      ;
; -2.458 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.286      ;
; -2.442 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.270      ;
; -2.442 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.270      ;
; -2.437 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.265      ;
; -2.423 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.251      ;
; -2.420 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[16] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.210     ; 3.248      ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clk_SPD[0]'                                                                                                                                         ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                  ; To Node                                    ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.319 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.382      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.283 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.346      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.170 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.233      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.158 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.221      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.107 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.170      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.086 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.149      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.075 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.138      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.008 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.071      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -3.003 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.066      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.969 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 3.032      ;
; -2.903 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.315      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.887 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.950      ;
; -2.872 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.284      ;
; -2.871 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.283      ;
; -2.823 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.235      ;
; -2.817 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.880      ;
; -2.792 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.204      ;
; -2.791 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.203      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.777 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.840      ;
; -2.743 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.155      ;
; -2.712 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.124      ;
; -2.711 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.626     ; 3.123      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
; -2.686 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.975     ; 2.749      ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clk_SPD[0]'                                                                                                                                                                   ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                               ; To Node                                    ; Launch Clock                             ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; -3.122 ; random_0:r0|press                       ; bank:b0|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 4.260      ; 1.424      ;
; -2.994 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 0.731      ;
; -2.994 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 0.731      ;
; -2.957 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 0.731      ;
; -2.957 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 0.731      ;
; -2.886 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 0.731      ;
; -2.886 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 0.731      ;
; -2.797 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 0.928      ;
; -2.763 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 0.962      ;
; -2.726 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 0.962      ;
; -2.647 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 0.970      ;
; -2.644 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 0.973      ;
; -2.629 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.731      ;
; -2.579 ; random_2:r2|press                       ; bank:b2|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.606      ; 1.313      ;
; -2.542 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|count[6]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.168      ;
; -2.538 ; bank:b1|L2:light_2|D_FF:dff1|q          ; bank:b1|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.332      ; 1.080      ;
; -2.530 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.180      ;
; -2.526 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.199      ;
; -2.525 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|maxcount[6] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.185      ;
; -2.520 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.190      ;
; -2.513 ; bank:b0|L3:light_3|D_FF:dff1|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.212      ;
; -2.504 ; bank:b0|L1:light_1|D_FF:dff1|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.221      ;
; -2.493 ; bank:b0|L2:light_2|D_FF:dff1|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.232      ;
; -2.484 ; bank:b2|L1:light_1|D_FF:dff1|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.204      ;
; -2.481 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.897      ;
; -2.480 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.898      ;
; -2.475 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.903      ;
; -2.473 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.905      ;
; -2.472 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.906      ;
; -2.472 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.906      ;
; -2.469 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.909      ;
; -2.469 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.909      ;
; -2.468 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.910      ;
; -2.464 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.914      ;
; -2.462 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.901      ;
; -2.461 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.264      ;
; -2.461 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.917      ;
; -2.460 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.918      ;
; -2.459 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.904      ;
; -2.458 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.920      ;
; -2.457 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.903      ;
; -2.457 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.906      ;
; -2.457 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.906      ;
; -2.456 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.904      ;
; -2.456 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.907      ;
; -2.455 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 0.923      ;
; -2.454 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.909      ;
; -2.454 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.909      ;
; -2.454 ; bank:b2|L2:light_2|D_FF:dff1|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.401      ; 1.233      ;
; -2.453 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.907      ;
; -2.453 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 0.910      ;
; -2.452 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.908      ;
; -2.451 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.909      ;
; -2.449 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.911      ;
; -2.448 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.912      ;
; -2.447 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.913      ;
; -2.431 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.294      ;
; -2.424 ; score_keep:sk|score_counter:sc|count[5] ; score_keep:sk|score_counter:sc|count[5]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.286      ;
; -2.423 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 0.937      ;
; -2.414 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|count[0]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.296      ;
; -2.414 ; bank:b1|L1:light_1|D_FF:dff1|q          ; bank:b1|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.203      ;
; -2.389 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.299      ;
; -2.389 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.336      ;
; -2.382 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|count[4]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.328      ;
; -2.380 ; score_keep:sk|score_counter:sc|count[2] ; score_keep:sk|score_counter:sc|count[2]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.330      ;
; -2.359 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.329      ;
; -2.341 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.276      ;
; -2.339 ; bank:b2|L0:light_0|D_FF:dff0|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.349      ;
; -2.331 ; bank:b2|L1:light_1|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.357      ;
; -2.319 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 1.059      ;
; -2.317 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.300      ;
; -2.316 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 1.062      ;
; -2.310 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 1.053      ;
; -2.307 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 1.053      ;
; -2.303 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 1.057      ;
; -2.299 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.077      ; 1.064      ;
; -2.297 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 1.063      ;
; -2.291 ; bank:b2|L2:light_2|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.403      ; 1.398      ;
; -2.270 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.347      ;
; -2.267 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.443      ;
; -2.267 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.350      ;
; -2.266 ; bank:b2|L3:light_3|D_FF:dff1|q          ; bank:b2|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.401      ; 1.421      ;
; -2.260 ; bank:b3|L1:light_1|D_FF:dff1|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 1.100      ;
; -2.257 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.074      ; 1.103      ;
; -2.252 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.473      ;
; -2.251 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.092      ; 1.127      ;
; -2.246 ; bank:b1|L3:light_3|D_FF:dff1|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.331      ; 1.371      ;
; -2.243 ; score_keep:sk|score_counter:sc|count[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.467      ;
; -2.234 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.454      ;
; -2.233 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.403      ; 1.456      ;
; -2.233 ; bank:b0|L0:light_0|D_FF:dff0|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.492      ;
; -2.232 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.403      ; 1.457      ;
; -2.227 ; score_keep:sk|score_counter:sc|count[1] ; score_keep:sk|score_counter:sc|count[1]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.483      ;
; -2.223 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|press                          ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.073      ; 1.136      ;
; -2.209 ; bank:b2|L2:light_2|D_FF:dff0|q          ; bank:b2|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.403      ; 1.480      ;
; -2.207 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.440      ; 1.519      ;
; -2.202 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.440      ; 1.524      ;
; -2.187 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.439      ; 1.538      ;
; -2.186 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.402      ; 1.502      ;
; -2.178 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|count[3]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 3.424      ; 1.532      ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'CLOCK_50'                                                                                                                                                                    ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                ; To Node                                  ; Launch Clock                             ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; -2.773 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 1.306      ;
; -2.340 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 1.739      ;
; -2.273 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 1.306      ;
; -2.260 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 1.819      ;
; -2.180 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 1.899      ;
; -2.100 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 1.979      ;
; -2.020 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.516      ; 2.059      ;
; -1.840 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 1.739      ;
; -1.760 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 1.819      ;
; -1.680 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 1.899      ;
; -1.649 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.220      ;
; -1.600 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 1.979      ;
; -1.569 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.300      ;
; -1.520 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.516      ; 2.059      ;
; -1.489 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.380      ;
; -1.409 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.460      ;
; -1.329 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.540      ;
; -1.249 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.620      ;
; -1.169 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.700      ;
; -1.149 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.220      ;
; -1.089 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.780      ;
; -1.069 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.300      ;
; -0.989 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.380      ;
; -0.915 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 2.954      ;
; -0.909 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.460      ;
; -0.835 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.034      ;
; -0.829 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.540      ;
; -0.755 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.114      ;
; -0.749 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.620      ;
; -0.675 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.194      ;
; -0.669 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.700      ;
; -0.595 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.274      ;
; -0.589 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.780      ;
; -0.515 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.354      ;
; -0.435 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.434      ;
; -0.415 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 2.954      ;
; -0.355 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 3.306      ; 3.514      ;
; -0.335 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.034      ;
; -0.255 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.114      ;
; -0.175 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.194      ;
; -0.095 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.274      ;
; -0.015 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.354      ;
; 0.065  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.434      ;
; 0.145  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 3.306      ; 3.514      ;
; 0.629  ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.915      ;
; 0.968  ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[1]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.254      ;
; 0.968  ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[16] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.254      ;
; 0.975  ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[17] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.261      ;
; 0.976  ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[2]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.262      ;
; 0.976  ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[9]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.262      ;
; 0.976  ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[18] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.262      ;
; 0.976  ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[25] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.262      ;
; 0.977  ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[4]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[7]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[11] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[13] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[14] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[15] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[20] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[23] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[27] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 0.977  ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.263      ;
; 1.011  ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[8]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.297      ;
; 1.015  ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[24] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.301      ;
; 1.016  ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[3]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[5]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[6]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[19] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[21] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[22] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[26] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.016  ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.302      ;
; 1.193  ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[12] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.479      ;
; 1.236  ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[1]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.522      ;
; 1.400  ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[17] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.686      ;
; 1.400  ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[2]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.686      ;
; 1.407  ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[18] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.693      ;
; 1.408  ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[10] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.694      ;
; 1.408  ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[3]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.694      ;
; 1.408  ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[19] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.694      ;
; 1.408  ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[26] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.694      ;
; 1.409  ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[14] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[15] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[5]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[21] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.409  ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[12] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.695      ;
; 1.444  ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[9]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.730      ;
; 1.448  ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[25] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.734      ;
; 1.449  ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[4]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[7]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[20] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[23] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[27] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[6]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
; 1.449  ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[22] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 1.735      ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock_divider:divider|divided_clocks[10]'                                                                                                                                                                 ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+
; Slack ; From Node                               ; To Node                                    ; Launch Clock                             ; Latch Clock                              ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+
; 0.317 ; random_0:r0|press                       ; bank:b0|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.821      ; 1.424      ;
; 0.445 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff1|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; counter_3b:ct|D_FF:dff2|q               ; counter_3b:ct|D_FF:dff2|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; counter_3b:ct|D_FF:dff3|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.731      ;
; 0.611 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.897      ;
; 0.612 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.898      ;
; 0.615 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.901      ;
; 0.617 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.903      ;
; 0.617 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.903      ;
; 0.618 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.904      ;
; 0.618 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.904      ;
; 0.619 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.905      ;
; 0.620 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.906      ;
; 0.620 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.906      ;
; 0.620 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.906      ;
; 0.620 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.906      ;
; 0.621 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.907      ;
; 0.621 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.907      ;
; 0.622 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.908      ;
; 0.623 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.909      ;
; 0.623 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.909      ;
; 0.623 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.909      ;
; 0.623 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.909      ;
; 0.623 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.909      ;
; 0.624 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.910      ;
; 0.624 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.910      ;
; 0.625 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.911      ;
; 0.626 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.912      ;
; 0.627 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.913      ;
; 0.628 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.914      ;
; 0.628 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff2|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.914      ;
; 0.631 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.917      ;
; 0.631 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.917      ;
; 0.632 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.918      ;
; 0.634 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.920      ;
; 0.637 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.923      ;
; 0.642 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.928      ;
; 0.651 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.937      ;
; 0.676 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.962      ;
; 0.676 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.962      ;
; 0.684 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.970      ;
; 0.687 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.973      ;
; 0.767 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.053      ;
; 0.767 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.053      ;
; 0.771 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.057      ;
; 0.773 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.059      ;
; 0.776 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.062      ;
; 0.777 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.063      ;
; 0.778 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.064      ;
; 0.793 ; bank:b1|L2:light_2|D_FF:dff1|q          ; bank:b1|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.001      ; 1.080      ;
; 0.814 ; bank:b3|L1:light_1|D_FF:dff1|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.100      ;
; 0.817 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.103      ;
; 0.823 ; random_2:r2|press                       ; bank:b2|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.204      ; 1.313      ;
; 0.841 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.127      ;
; 0.851 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|press                          ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.001     ; 1.136      ;
; 0.882 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|count[6]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.168      ;
; 0.894 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.180      ;
; 0.899 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|maxcount[6] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.185      ;
; 0.904 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.190      ;
; 0.913 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.199      ;
; 0.917 ; bank:b1|L1:light_1|D_FF:dff1|q          ; bank:b1|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.203      ;
; 0.918 ; bank:b2|L1:light_1|D_FF:dff1|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.204      ;
; 0.926 ; bank:b0|L3:light_3|D_FF:dff1|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.212      ;
; 0.927 ; bank:b3|L3:light_3|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.213      ;
; 0.927 ; bank:b3|L3:light_3|D_FF:dff1|q          ; bank:b3|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.213      ;
; 0.935 ; bank:b0|L1:light_1|D_FF:dff1|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.221      ;
; 0.946 ; bank:b0|L2:light_2|D_FF:dff1|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.232      ;
; 0.948 ; bank:b2|L2:light_2|D_FF:dff1|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.001     ; 1.233      ;
; 0.958 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.244      ;
; 0.978 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.264      ;
; 0.978 ; counter_3b:ct|D_FF:dff2|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.264      ;
; 0.983 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.269      ;
; 0.984 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.270      ;
; 0.990 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.276      ;
; 1.000 ; score_keep:sk|score_counter:sc|count[5] ; score_keep:sk|score_counter:sc|count[5]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.286      ;
; 1.004 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|press                          ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.004     ; 1.286      ;
; 1.008 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.294      ;
; 1.010 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|count[0]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.296      ;
; 1.013 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.299      ;
; 1.014 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.300      ;
; 1.042 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|count[4]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.328      ;
; 1.043 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.329      ;
; 1.044 ; score_keep:sk|score_counter:sc|count[2] ; score_keep:sk|score_counter:sc|count[2]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.330      ;
; 1.044 ; bank:b3|L0:light_0|D_FF:dff0|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.330      ;
; 1.050 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.336      ;
; 1.061 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.347      ;
; 1.063 ; bank:b2|L0:light_0|D_FF:dff0|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.349      ;
; 1.064 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.350      ;
; 1.071 ; bank:b2|L1:light_1|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.357      ;
; 1.075 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.361      ;
; 1.083 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.369      ;
; 1.085 ; bank:b1|L3:light_3|D_FF:dff1|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 1.371      ;
; 1.111 ; bank:b2|L2:light_2|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.001      ; 1.398      ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clk_SPD[0]'                                                                                     ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock      ; Clock Edge ; Target                                     ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; clk_SPD[0] ; Rise       ; clk_SPD[0]                                 ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q             ;
; -1.601 ; -0.490       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q             ;
; -1.601 ; -0.490       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q             ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[0]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[0]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[1]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[1]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[2]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[2]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[3]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[3]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[4]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[4]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[5]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[5]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[6]    ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[6]    ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[0] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[0] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[1] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[1] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[2] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[2] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[3] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[3] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[4] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[4] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[5] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[5] ;
; -1.586 ; -0.475       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[6] ;
; -1.586 ; -0.475       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[6] ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q             ;
; -1.564 ; -0.453       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q             ;
; -1.564 ; -0.453       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q             ;
; -1.493 ; -0.382       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q             ;
; -1.493 ; -0.382       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q             ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ;
; -1.254 ; -0.143       ; 1.111          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ;
; -1.254 ; -0.143       ; 1.111          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|press                          ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'CLOCK_50'                                                                                   ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                 ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[0]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[0]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[11] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[11] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[12] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[12] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[13] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[13] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[14] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[14] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[15] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[15] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[16] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[16] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[17] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[17] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[18] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[18] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[19] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[19] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[1]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[1]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[20] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[20] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[21] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[21] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[22] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[22] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[23] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[23] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[24] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[24] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[25] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[25] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[26] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[26] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[27] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[27] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[28] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[28] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[29] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[29] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[2]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[2]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[30] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[30] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[31] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[31] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[3]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[3]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[4]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[4]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[5]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[5]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[6]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[6]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[7]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[7]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[8]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[8]  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[9]  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[9]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[10]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[10]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[11]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[11]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[12]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[12]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[13]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[13]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[14]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[14]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[15]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[15]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[16]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[16]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[17]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[17]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[18]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[18]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[19]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[19]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[20]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[20]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[21]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[21]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[22]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[22]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[23]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[23]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[24]|clk           ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock_divider:divider|divided_clocks[10]'                                                                                ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                                    ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L0:light_0|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff0|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff1|q        ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff1|q             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff1|q             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff2|q             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff2|q             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff3|q             ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff3|q             ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|press                     ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|press                     ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                                    ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; -0.610 ; -0.610 ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; -0.915 ; -0.915 ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; -0.997 ; -0.997 ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; -1.705 ; -1.705 ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; -0.610 ; -0.610 ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; 1.839  ; 1.839  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; 1.534  ; 1.534  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; 1.452  ; 1.452  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; 0.744  ; 0.744  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; 1.839  ; 1.839  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                                     ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; 3.677  ; 3.677  ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; 2.958  ; 2.958  ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; 2.854  ; 2.854  ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; 3.677  ; 3.677  ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; 2.674  ; 2.674  ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; 0.275  ; 0.275  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; -0.481 ; -0.481 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; -0.477 ; -0.477 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; 0.275  ; 0.275  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; -0.400 ; -0.400 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 18.208 ; 18.208 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 16.397 ; 16.397 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 15.791 ; 15.791 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 16.622 ; 16.622 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 18.208 ; 18.208 ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 19.333 ; 19.333 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 17.178 ; 17.178 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 17.863 ; 17.863 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 19.333 ; 19.333 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 19.117 ; 19.117 ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 26.979 ; 26.979 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 26.948 ; 26.948 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 26.466 ; 26.466 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 26.935 ; 26.935 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 26.979 ; 26.979 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 26.975 ; 26.975 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 26.468 ; 26.468 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 26.470 ; 26.470 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 27.553 ; 27.553 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 27.553 ; 27.553 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 27.144 ; 27.144 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 27.145 ; 27.145 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 27.189 ; 27.189 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 27.168 ; 27.168 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 27.513 ; 27.513 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 27.227 ; 27.227 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 26.448 ; 26.448 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 26.173 ; 26.173 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 26.075 ; 26.075 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 26.234 ; 26.234 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 26.237 ; 26.237 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 26.211 ; 26.211 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 26.414 ; 26.414 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 26.448 ; 26.448 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 26.351 ; 26.351 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 26.178 ; 26.178 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 26.315 ; 26.315 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 26.351 ; 26.351 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 26.224 ; 26.224 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 26.148 ; 26.148 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 25.804 ; 25.804 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 26.220 ; 26.220 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 15.134 ; 15.134 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 12.958 ; 12.958 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 12.460 ; 12.460 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 13.220 ; 13.220 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 15.134 ; 15.134 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 16.043 ; 16.043 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 13.739 ; 13.739 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 14.532 ; 14.532 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 15.931 ; 15.931 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 16.043 ; 16.043 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 9.251  ; 9.251  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 8.786  ; 8.786  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 8.592  ; 8.592  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 8.759  ; 8.759  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 8.419  ; 8.419  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 8.871  ; 8.871  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 9.251  ; 9.251  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 9.091  ; 9.091  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 8.757  ; 8.757  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 23.555 ; 23.555 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 23.524 ; 23.524 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 23.042 ; 23.042 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 23.511 ; 23.511 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 23.555 ; 23.555 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 23.551 ; 23.551 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 23.044 ; 23.044 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 23.046 ; 23.046 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 24.129 ; 24.129 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 24.129 ; 24.129 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 23.720 ; 23.720 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 23.721 ; 23.721 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 23.765 ; 23.765 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 23.744 ; 23.744 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 24.089 ; 24.089 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 23.803 ; 23.803 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 23.024 ; 23.024 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 22.749 ; 22.749 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 22.651 ; 22.651 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 22.810 ; 22.810 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 22.813 ; 22.813 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 22.787 ; 22.787 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 22.990 ; 22.990 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 23.024 ; 23.024 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 22.927 ; 22.927 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 22.754 ; 22.754 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 22.891 ; 22.891 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 22.927 ; 22.927 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 22.800 ; 22.800 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 22.724 ; 22.724 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 22.380 ; 22.380 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 22.796 ; 22.796 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                                  ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 14.909 ; 14.909 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 15.407 ; 15.407 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 14.909 ; 14.909 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 15.669 ; 15.669 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 17.583 ; 17.583 ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 14.888 ; 14.888 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 14.888 ; 14.888 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 15.324 ; 15.324 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 15.460 ; 15.460 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 17.398 ; 17.398 ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 16.102 ; 16.102 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 16.102 ; 16.102 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 16.994 ; 16.994 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 16.155 ; 16.155 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 16.135 ; 16.135 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 16.125 ; 16.125 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 16.996 ; 16.996 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 16.998 ; 16.998 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 17.059 ; 17.059 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 17.432 ; 17.432 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 17.060 ; 17.060 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 17.059 ; 17.059 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 17.066 ; 17.066 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 17.074 ; 17.074 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 17.433 ; 17.433 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 17.101 ; 17.101 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 15.400 ; 15.400 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 15.400 ; 15.400 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 16.193 ; 16.193 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 15.432 ; 15.432 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 15.432 ; 15.432 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 15.403 ; 15.403 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 16.567 ; 16.567 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 16.569 ; 16.569 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 16.809 ; 16.809 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 17.141 ; 17.141 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 17.333 ; 17.333 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 17.356 ; 17.356 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 17.198 ; 17.198 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 17.157 ; 17.157 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 16.809 ; 16.809 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 17.180 ; 17.180 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 7.833  ; 7.833  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 8.872  ; 8.872  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 8.255  ; 8.255  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 7.833  ; 7.833  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 8.214  ; 8.214  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 8.817  ; 8.817  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 8.817  ; 8.817  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 9.643  ; 9.643  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 9.467  ; 9.467  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 9.687  ; 9.687  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 7.910  ; 7.910  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 8.255  ; 8.255  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 8.050  ; 8.050  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 8.219  ; 8.219  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 7.910  ; 7.910  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 8.337  ; 8.337  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 8.865  ; 8.865  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 8.577  ; 8.577  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 8.244  ; 8.244  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 13.653 ; 13.653 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 13.653 ; 13.653 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 14.545 ; 14.545 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 13.706 ; 13.706 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 13.686 ; 13.686 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 13.676 ; 13.676 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 14.547 ; 14.547 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 14.549 ; 14.549 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 14.610 ; 14.610 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 14.983 ; 14.983 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 14.611 ; 14.611 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 14.610 ; 14.610 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 14.617 ; 14.617 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 14.625 ; 14.625 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 14.984 ; 14.984 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 14.652 ; 14.652 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 12.951 ; 12.951 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 12.951 ; 12.951 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 13.744 ; 13.744 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 12.983 ; 12.983 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 12.983 ; 12.983 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 12.954 ; 12.954 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 14.118 ; 14.118 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 14.120 ; 14.120 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 14.360 ; 14.360 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 14.692 ; 14.692 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 14.884 ; 14.884 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 14.907 ; 14.907 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 14.749 ; 14.749 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 14.708 ; 14.708 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 14.360 ; 14.360 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 14.731 ; 14.731 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+-------------------------------------------------------------------+
; Fast Model Setup Summary                                          ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clock_divider:divider|divided_clocks[10] ; -1.900 ; -103.214      ;
; CLOCK_50                                 ; -0.960 ; -11.500       ;
; clk_SPD[0]                               ; -0.733 ; -15.237       ;
+------------------------------------------+--------+---------------+


+-------------------------------------------------------------------+
; Fast Model Hold Summary                                           ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clk_SPD[0]                               ; -1.435 ; -98.293       ;
; CLOCK_50                                 ; -1.434 ; -18.866       ;
; clock_divider:divider|divided_clocks[10] ; 0.105  ; 0.000         ;
+------------------------------------------+--------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+-------------------------------------------------------------------+
; Fast Model Minimum Pulse Width Summary                            ;
+------------------------------------------+--------+---------------+
; Clock                                    ; Slack  ; End Point TNS ;
+------------------------------------------+--------+---------------+
; clk_SPD[0]                               ; -1.380 ; -139.398      ;
; CLOCK_50                                 ; -1.380 ; -33.380       ;
; clock_divider:divider|divided_clocks[10] ; -0.500 ; -91.000       ;
+------------------------------------------+--------+---------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock_divider:divider|divided_clocks[10]'                                                                                                                                        ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+
; Slack  ; From Node                                  ; To Node                                    ; Launch Clock ; Latch Clock                              ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.900 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.415      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.883 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.398      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.844 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.359      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.831 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.346      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.802 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.317      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.791 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.306      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.778 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.293      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.767 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.282      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.757 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.272      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.730 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.245      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.706 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.221      ;
; -1.674 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.284      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.668 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.183      ;
; -1.658 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.268      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.646 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.256      ;
; -1.644 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.422     ; 1.254      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
; -1.626 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clock_divider:divider|divided_clocks[10] ; 1.000        ; -1.517     ; 1.141      ;
+--------+--------------------------------------------+--------------------------------------------+--------------+------------------------------------------+--------------+------------+------------+


+--------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'CLOCK_50'                                                                                                                                       ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                ; To Node                                  ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+
; -0.960 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.924      ;
; -0.925 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.889      ;
; -0.890 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.854      ;
; -0.866 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.830      ;
; -0.855 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.819      ;
; -0.836 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.800      ;
; -0.831 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.795      ;
; -0.820 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.784      ;
; -0.814 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.778      ;
; -0.801 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.765      ;
; -0.796 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.760      ;
; -0.785 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.749      ;
; -0.779 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.743      ;
; -0.767 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.731      ;
; -0.766 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.730      ;
; -0.761 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.725      ;
; -0.750 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.714      ;
; -0.745 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.709      ;
; -0.744 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.708      ;
; -0.732 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.696      ;
; -0.731 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.695      ;
; -0.726 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.690      ;
; -0.715 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.679      ;
; -0.710 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.674      ;
; -0.710 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.674      ;
; -0.709 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.673      ;
; -0.697 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.661      ;
; -0.696 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.660      ;
; -0.691 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.655      ;
; -0.675 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.639      ;
; -0.675 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.639      ;
; -0.674 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.638      ;
; -0.662 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.626      ;
; -0.661 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.625      ;
; -0.658 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.622      ;
; -0.656 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.620      ;
; -0.640 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.604      ;
; -0.640 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.604      ;
; -0.639 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.603      ;
; -0.627 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.591      ;
; -0.626 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.590      ;
; -0.623 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.587      ;
; -0.621 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.585      ;
; -0.621 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.585      ;
; -0.605 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.569      ;
; -0.605 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.569      ;
; -0.604 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.568      ;
; -0.592 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.556      ;
; -0.591 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.555      ;
; -0.588 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.552      ;
; -0.586 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.550      ;
; -0.578 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.542      ;
; -0.570 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.534      ;
; -0.570 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.534      ;
; -0.569 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.533      ;
; -0.557 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.521      ;
; -0.553 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.517      ;
; -0.551 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.515      ;
; -0.543 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.507      ;
; -0.535 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.499      ;
; -0.535 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.499      ;
; -0.532 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.496      ;
; -0.527 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.491      ;
; -0.522 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.486      ;
; -0.518 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.482      ;
; -0.516 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.480      ;
; -0.508 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.472      ;
; -0.505 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.469      ;
; -0.500 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.464      ;
; -0.500 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.464      ;
; -0.497 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.461      ;
; -0.497 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.461      ;
; -0.492 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.456      ;
; -0.483 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.447      ;
; -0.481 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[19] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.445      ;
; -0.475 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.439      ;
; -0.473 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.437      ;
; -0.470 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.434      ;
; -0.465 ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.429      ;
; -0.462 ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.426      ;
; -0.462 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.426      ;
; -0.462 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.426      ;
; -0.457 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.421      ;
; -0.448 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[25] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.412      ;
; -0.446 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[18] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.410      ;
; -0.440 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[22] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.404      ;
; -0.438 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[27] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.402      ;
; -0.435 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.399      ;
; -0.428 ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.392      ;
; -0.427 ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.391      ;
; -0.427 ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.391      ;
; -0.427 ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.391      ;
; -0.422 ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[20] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.386      ;
; -0.413 ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[24] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.377      ;
; -0.411 ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[17] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.375      ;
; -0.406 ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[23] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.370      ;
; -0.405 ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[21] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.369      ;
; -0.403 ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[26] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.367      ;
; -0.400 ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.364      ;
; -0.393 ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50     ; CLOCK_50    ; 1.000        ; -0.068     ; 1.357      ;
+--------+------------------------------------------+------------------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clk_SPD[0]'                                                                                                                                         ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                  ; To Node                                    ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.733 ; score_keep:sk|score_counter:sc|maxcount[0] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.415      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.716 ; score_keep:sk|score_counter:sc|count[0]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.398      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.677 ; score_keep:sk|score_counter:sc|count[1]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.359      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.664 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.346      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.635 ; score_keep:sk|score_counter:sc|count[3]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.317      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.624 ; score_keep:sk|score_counter:sc|maxcount[3] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.306      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.611 ; score_keep:sk|score_counter:sc|maxcount[1] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.293      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.600 ; score_keep:sk|score_counter:sc|count[5]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.282      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.590 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.272      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.563 ; score_keep:sk|score_counter:sc|maxcount[2] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.245      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.539 ; score_keep:sk|score_counter:sc|count[2]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.221      ;
; -0.507 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.284      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[0] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[1] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[2] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[3] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[5] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[6] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.501 ; score_keep:sk|score_counter:sc|maxcount[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.183      ;
; -0.491 ; bank:b3|L4:light_4|D_FF:dff0|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.268      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.479 ; bank:b3|L2:light_2|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.256      ;
; -0.477 ; bank:b3|L4:light_4|D_FF:dff1|q             ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.255     ; 1.254      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[0]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[1]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[2]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[3]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[4]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[5]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
; -0.459 ; score_keep:sk|score_counter:sc|count[4]    ; score_keep:sk|score_counter:sc|count[6]    ; clk_SPD[0]   ; clk_SPD[0]  ; 1.000        ; -0.350     ; 1.141      ;
+--------+--------------------------------------------+--------------------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clk_SPD[0]'                                                                                                                                                                   ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                               ; To Node                                    ; Launch Clock                             ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; -1.435 ; random_0:r0|press                       ; bank:b0|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.868      ; 0.585      ;
; -1.325 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.367      ;
; -1.325 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.367      ;
; -1.289 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.403      ;
; -1.286 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.367      ;
; -1.286 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.367      ;
; -1.270 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.422      ;
; -1.265 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.367      ;
; -1.265 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.367      ;
; -1.230 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.423      ;
; -1.210 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.422      ;
; -1.208 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.424      ;
; -1.188 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.504      ;
; -1.181 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.367      ;
; -1.179 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|count[6]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.490      ;
; -1.178 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.491      ;
; -1.174 ; random_2:r2|press                       ; bank:b2|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.561      ; 0.539      ;
; -1.169 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.500      ;
; -1.169 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.387      ;
; -1.168 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|maxcount[6] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.501      ;
; -1.168 ; bank:b0|L3:light_3|D_FF:dff1|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.524      ;
; -1.168 ; bank:b1|L2:light_2|D_FF:dff1|q          ; bank:b1|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.481      ; 0.465      ;
; -1.168 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.388      ;
; -1.165 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.391      ;
; -1.164 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.392      ;
; -1.164 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.392      ;
; -1.163 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.393      ;
; -1.162 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.394      ;
; -1.162 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.394      ;
; -1.162 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.394      ;
; -1.160 ; bank:b0|L1:light_1|D_FF:dff1|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.532      ;
; -1.160 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.391      ;
; -1.160 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.391      ;
; -1.159 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.392      ;
; -1.158 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.393      ;
; -1.158 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.398      ;
; -1.157 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.391      ;
; -1.157 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.394      ;
; -1.157 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.399      ;
; -1.157 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.399      ;
; -1.156 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.392      ;
; -1.156 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.395      ;
; -1.156 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.395      ;
; -1.156 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.400      ;
; -1.155 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.393      ;
; -1.155 ; bank:b0|L2:light_2|D_FF:dff1|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.537      ;
; -1.155 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.396      ;
; -1.154 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.394      ;
; -1.154 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.394      ;
; -1.153 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.395      ;
; -1.153 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.403      ;
; -1.151 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.397      ;
; -1.151 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.397      ;
; -1.151 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.541      ;
; -1.150 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.542      ;
; -1.146 ; score_keep:sk|score_counter:sc|count[5] ; score_keep:sk|score_counter:sc|count[5]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.523      ;
; -1.143 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|count[0]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.526      ;
; -1.142 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.406      ;
; -1.140 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.552      ;
; -1.135 ; bank:b2|L2:light_2|D_FF:dff1|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.499      ; 0.516      ;
; -1.134 ; score_keep:sk|score_counter:sc|count[2] ; score_keep:sk|score_counter:sc|count[2]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.535      ;
; -1.134 ; bank:b2|L1:light_1|D_FF:dff1|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.519      ;
; -1.133 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|count[4]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.536      ;
; -1.118 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.535      ;
; -1.116 ; bank:b1|L1:light_1|D_FF:dff1|q          ; bank:b1|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.516      ;
; -1.111 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.445      ;
; -1.108 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.448      ;
; -1.100 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.451      ;
; -1.100 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.448      ;
; -1.097 ; bank:b2|L0:light_0|D_FF:dff0|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.556      ;
; -1.093 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.560      ;
; -1.093 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.539      ;
; -1.093 ; bank:b2|L1:light_1|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.560      ;
; -1.089 ; bank:b0|L0:light_0|D_FF:dff0|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.603      ;
; -1.087 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.404      ; 0.469      ;
; -1.085 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.463      ;
; -1.084 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.548      ;
; -1.082 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|maxcount[0] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.587      ;
; -1.080 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.480      ; 0.552      ;
; -1.080 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.541      ; 0.613      ;
; -1.079 ; bank:b3|L1:light_1|D_FF:dff1|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.469      ;
; -1.079 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.481      ; 0.554      ;
; -1.078 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.541      ; 0.615      ;
; -1.075 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.617      ;
; -1.074 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|press                          ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.394      ; 0.472      ;
; -1.071 ; score_keep:sk|score_counter:sc|count[1] ; score_keep:sk|score_counter:sc|count[1]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.598      ;
; -1.071 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.399      ; 0.480      ;
; -1.069 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.479      ;
; -1.068 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.624      ;
; -1.067 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.625      ;
; -1.065 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q     ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.396      ; 0.483      ;
; -1.063 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|count[3]    ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.606      ;
; -1.063 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.540      ; 0.629      ;
; -1.060 ; bank:b2|L3:light_3|D_FF:dff1|q          ; bank:b2|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.499      ; 0.591      ;
; -1.057 ; bank:b2|L2:light_2|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.503      ; 0.598      ;
; -1.053 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.600      ;
; -1.046 ; bank:b1|L3:light_3|D_FF:dff1|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.479      ; 0.585      ;
; -1.045 ; score_keep:sk|score_counter:sc|count[1] ; score_keep:sk|score_counter:sc|maxcount[1] ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.517      ; 0.624      ;
; -1.045 ; bank:b2|L2:light_2|D_FF:dff0|q          ; bank:b2|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.503      ; 0.610      ;
; -1.044 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]  ; 0.000        ; 1.501      ; 0.609      ;
+--------+-----------------------------------------+--------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'CLOCK_50'                                                                                                                                                                    ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; Slack  ; From Node                                ; To Node                                  ; Launch Clock                             ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+
; -1.434 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.524      ;
; -1.294 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.664      ;
; -1.259 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.699      ;
; -1.224 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.734      ;
; -1.189 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.769      ;
; -1.154 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.665      ; 0.804      ;
; -0.999 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 0.891      ;
; -0.964 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 0.926      ;
; -0.934 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.524      ;
; -0.929 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 0.961      ;
; -0.894 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 0.996      ;
; -0.859 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.031      ;
; -0.824 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.066      ;
; -0.794 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.664      ;
; -0.789 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.101      ;
; -0.759 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.699      ;
; -0.754 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.136      ;
; -0.724 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.734      ;
; -0.689 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.769      ;
; -0.660 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.230      ;
; -0.654 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.665      ; 0.804      ;
; -0.625 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.265      ;
; -0.590 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.300      ;
; -0.555 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.335      ;
; -0.520 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.370      ;
; -0.499 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 0.891      ;
; -0.485 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.405      ;
; -0.464 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 0.926      ;
; -0.450 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.440      ;
; -0.429 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 0.961      ;
; -0.415 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; 0.000        ; 1.597      ; 1.475      ;
; -0.394 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 0.996      ;
; -0.359 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.031      ;
; -0.324 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.066      ;
; -0.289 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.101      ;
; -0.254 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.136      ;
; -0.160 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.230      ;
; -0.125 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.265      ;
; -0.090 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.300      ;
; -0.055 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.335      ;
; -0.020 ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.370      ;
; 0.015  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.405      ;
; 0.050  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.440      ;
; 0.085  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[10] ; CLOCK_50    ; -0.500       ; 1.597      ; 1.475      ;
; 0.243  ; clock_divider:divider|divided_clocks[31] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.395      ;
; 0.355  ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[16] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.507      ;
; 0.358  ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[1]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.510      ;
; 0.359  ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[17] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.511      ;
; 0.360  ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[2]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[9]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[11] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[18] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[25] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.360  ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[27] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.512      ;
; 0.361  ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[4]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[7]  ; clock_divider:divider|divided_clocks[7]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[13] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[14] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[15] ; clock_divider:divider|divided_clocks[15] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[20] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[23] ; clock_divider:divider|divided_clocks[23] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.361  ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.513      ;
; 0.369  ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[8]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.521      ;
; 0.371  ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[3]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[19] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[24] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.371  ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[26] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.523      ;
; 0.372  ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[5]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[6]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[21] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[22] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.372  ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.524      ;
; 0.438  ; clock_divider:divider|divided_clocks[12] ; clock_divider:divider|divided_clocks[12] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.590      ;
; 0.447  ; clock_divider:divider|divided_clocks[1]  ; clock_divider:divider|divided_clocks[1]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.599      ;
; 0.493  ; clock_divider:divider|divided_clocks[16] ; clock_divider:divider|divided_clocks[17] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.645      ;
; 0.493  ; clock_divider:divider|divided_clocks[0]  ; clock_divider:divider|divided_clocks[2]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.645      ;
; 0.497  ; clock_divider:divider|divided_clocks[17] ; clock_divider:divider|divided_clocks[18] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.649      ;
; 0.498  ; clock_divider:divider|divided_clocks[9]  ; clock_divider:divider|divided_clocks[10] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clock_divider:divider|divided_clocks[2]  ; clock_divider:divider|divided_clocks[3]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clock_divider:divider|divided_clocks[18] ; clock_divider:divider|divided_clocks[19] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clock_divider:divider|divided_clocks[25] ; clock_divider:divider|divided_clocks[26] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clock_divider:divider|divided_clocks[27] ; clock_divider:divider|divided_clocks[28] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.498  ; clock_divider:divider|divided_clocks[11] ; clock_divider:divider|divided_clocks[12] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.650      ;
; 0.499  ; clock_divider:divider|divided_clocks[30] ; clock_divider:divider|divided_clocks[31] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clock_divider:divider|divided_clocks[13] ; clock_divider:divider|divided_clocks[14] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clock_divider:divider|divided_clocks[14] ; clock_divider:divider|divided_clocks[15] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clock_divider:divider|divided_clocks[29] ; clock_divider:divider|divided_clocks[30] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clock_divider:divider|divided_clocks[4]  ; clock_divider:divider|divided_clocks[5]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.499  ; clock_divider:divider|divided_clocks[20] ; clock_divider:divider|divided_clocks[21] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.651      ;
; 0.509  ; clock_divider:divider|divided_clocks[8]  ; clock_divider:divider|divided_clocks[9]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.661      ;
; 0.511  ; clock_divider:divider|divided_clocks[24] ; clock_divider:divider|divided_clocks[25] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.663      ;
; 0.511  ; clock_divider:divider|divided_clocks[26] ; clock_divider:divider|divided_clocks[27] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.663      ;
; 0.511  ; clock_divider:divider|divided_clocks[3]  ; clock_divider:divider|divided_clocks[4]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.663      ;
; 0.511  ; clock_divider:divider|divided_clocks[19] ; clock_divider:divider|divided_clocks[20] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.663      ;
; 0.512  ; clock_divider:divider|divided_clocks[6]  ; clock_divider:divider|divided_clocks[7]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
; 0.512  ; clock_divider:divider|divided_clocks[22] ; clock_divider:divider|divided_clocks[23] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
; 0.512  ; clock_divider:divider|divided_clocks[28] ; clock_divider:divider|divided_clocks[29] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
; 0.512  ; clock_divider:divider|divided_clocks[5]  ; clock_divider:divider|divided_clocks[6]  ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
; 0.512  ; clock_divider:divider|divided_clocks[21] ; clock_divider:divider|divided_clocks[22] ; CLOCK_50                                 ; CLOCK_50    ; 0.000        ; 0.000      ; 0.664      ;
+--------+------------------------------------------+------------------------------------------+------------------------------------------+-------------+--------------+------------+------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock_divider:divider|divided_clocks[10]'                                                                                                                                                                 ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+
; Slack ; From Node                               ; To Node                                    ; Launch Clock                             ; Latch Clock                              ; Relationship ; Clock Skew ; Data Delay ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+
; 0.105 ; random_0:r0|press                       ; bank:b0|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.328      ; 0.585      ;
; 0.215 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff1|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; counter_3b:ct|D_FF:dff2|q               ; counter_3b:ct|D_FF:dff2|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; counter_3b:ct|D_FF:dff3|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b2|L4:light_4|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.367      ;
; 0.235 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.387      ;
; 0.236 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.388      ;
; 0.239 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.391      ;
; 0.239 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.391      ;
; 0.239 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.391      ;
; 0.239 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.391      ;
; 0.240 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.392      ;
; 0.240 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.392      ;
; 0.240 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.392      ;
; 0.240 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff3|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.392      ;
; 0.241 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.393      ;
; 0.241 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.393      ;
; 0.241 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.393      ;
; 0.242 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff5|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.242 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff8|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.242 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.242 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.242 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff1|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.242 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.394      ;
; 0.243 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff7|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.395      ;
; 0.243 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff2|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.395      ;
; 0.244 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.396      ;
; 0.245 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff6|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.397      ;
; 0.245 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.397      ;
; 0.245 ; counter_3b:ct|D_FF:dff1|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.397      ;
; 0.246 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff5|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.398      ;
; 0.247 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.399      ;
; 0.247 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.399      ;
; 0.248 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.400      ;
; 0.251 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.403      ;
; 0.251 ; bank:b0|L4:light_4|D_FF:dff1|q          ; bank:b0|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.403      ;
; 0.254 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.406      ;
; 0.270 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.422      ;
; 0.270 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.422      ;
; 0.271 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.423      ;
; 0.272 ; bank:b1|L3:light_3|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.424      ;
; 0.293 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.445      ;
; 0.296 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff0|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.448      ;
; 0.296 ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff6|q   ; random_2:r2|LFSR_7b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.448      ;
; 0.299 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.451      ;
; 0.311 ; bank:b3|L2:light_2|D_FF:dff1|q          ; bank:b3|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.463      ;
; 0.312 ; bank:b1|L2:light_2|D_FF:dff1|q          ; bank:b1|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.001      ; 0.465      ;
; 0.317 ; bank:b3|L1:light_1|D_FF:dff1|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.469      ;
; 0.317 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.469      ;
; 0.322 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff9|q  ; random_3:r3|press                          ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.002     ; 0.472      ;
; 0.327 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff3|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff4|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.479      ;
; 0.327 ; random_2:r2|press                       ; bank:b2|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.060      ; 0.539      ;
; 0.328 ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q   ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.480      ;
; 0.331 ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff1|q  ; random_3:r3|LFSR_10b:lfsr1|D_FF:dff2|q     ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.483      ;
; 0.338 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|count[6]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.490      ;
; 0.339 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|maxcount[4] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.491      ;
; 0.348 ; score_keep:sk|score_counter:sc|count[3] ; score_keep:sk|score_counter:sc|maxcount[3] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.500      ;
; 0.349 ; score_keep:sk|score_counter:sc|count[6] ; score_keep:sk|score_counter:sc|maxcount[6] ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.501      ;
; 0.352 ; bank:b0|L4:light_4|D_FF:dff0|q          ; bank:b0|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.504      ;
; 0.361 ; counter_3b:ct|D_FF:dff2|q               ; counter_3b:ct|D_FF:dff3|q                  ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.513      ;
; 0.364 ; bank:b1|L1:light_1|D_FF:dff1|q          ; bank:b1|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.516      ;
; 0.366 ; bank:b2|L2:light_2|D_FF:dff1|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.002     ; 0.516      ;
; 0.367 ; bank:b2|L1:light_1|D_FF:dff1|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.519      ;
; 0.368 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q   ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.520      ;
; 0.371 ; bank:b3|L3:light_3|D_FF:dff1|q          ; bank:b3|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.523      ;
; 0.371 ; score_keep:sk|score_counter:sc|count[5] ; score_keep:sk|score_counter:sc|count[5]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.523      ;
; 0.372 ; bank:b0|L3:light_3|D_FF:dff1|q          ; bank:b0|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.524      ;
; 0.374 ; bank:b3|L3:light_3|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.526      ;
; 0.374 ; score_keep:sk|score_counter:sc|count[0] ; score_keep:sk|score_counter:sc|count[0]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.526      ;
; 0.380 ; bank:b0|L1:light_1|D_FF:dff1|q          ; bank:b0|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.532      ;
; 0.380 ; bank:b3|L1:light_1|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.532      ;
; 0.383 ; score_keep:sk|score_counter:sc|count[2] ; score_keep:sk|score_counter:sc|count[2]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.535      ;
; 0.383 ; bank:b2|L3:light_3|D_FF:dff0|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.535      ;
; 0.384 ; score_keep:sk|score_counter:sc|count[4] ; score_keep:sk|score_counter:sc|count[4]    ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.536      ;
; 0.385 ; bank:b0|L2:light_2|D_FF:dff1|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.537      ;
; 0.387 ; random_3:r3|press                       ; bank:b3|L0:light_0|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.080      ; 0.619      ;
; 0.387 ; bank:b1|L4:light_4|D_FF:dff1|q          ; bank:b1|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.539      ;
; 0.389 ; bank:b0|L1:light_1|D_FF:dff0|q          ; bank:b0|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.541      ;
; 0.390 ; bank:b0|L2:light_2|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.542      ;
; 0.396 ; bank:b1|L4:light_4|D_FF:dff0|q          ; bank:b1|L4:light_4|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.548      ;
; 0.398 ; bank:b3|L0:light_0|D_FF:dff0|q          ; bank:b3|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.550      ;
; 0.400 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.552      ;
; 0.400 ; bank:b0|L3:light_3|D_FF:dff0|q          ; bank:b0|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.552      ;
; 0.401 ; bank:b1|L2:light_2|D_FF:dff0|q          ; bank:b1|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.001      ; 0.554      ;
; 0.404 ; bank:b2|L0:light_0|D_FF:dff0|q          ; bank:b2|L1:light_1|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.556      ;
; 0.405 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L2:light_2|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.557      ;
; 0.408 ; bank:b2|L4:light_4|D_FF:dff1|q          ; bank:b2|L4:light_4|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.560      ;
; 0.408 ; bank:b2|L1:light_1|D_FF:dff0|q          ; bank:b2|L2:light_2|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.560      ;
; 0.408 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.560      ;
; 0.413 ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q   ; random_1:r1|press                          ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.004     ; 0.561      ;
; 0.416 ; bank:b3|L2:light_2|D_FF:dff0|q          ; bank:b3|L3:light_3|D_FF:dff1|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; 0.000      ; 0.568      ;
; 0.434 ; bank:b1|L3:light_3|D_FF:dff1|q          ; bank:b1|L3:light_3|D_FF:dff0|q             ; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 0.000        ; -0.001     ; 0.585      ;
+-------+-----------------------------------------+--------------------------------------------+------------------------------------------+------------------------------------------+--------------+------------+------------+


+----------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clk_SPD[0]'                                                                                     ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock      ; Clock Edge ; Target                                     ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clk_SPD[0] ; Rise       ; clk_SPD[0]                                 ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q             ;
; -0.873 ; 0.127        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q             ;
; -0.873 ; 0.127        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q             ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[0]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[0]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[1]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[1]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[2]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[2]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[3]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[3]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[4]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[4]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[5]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[5]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[6]    ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|count[6]    ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[0] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[0] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[1] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[1] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[2] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[2] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[3] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[3] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[4] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[4] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[5] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[5] ;
; -0.850 ; 0.150        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[6] ;
; -0.850 ; 0.150        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; score_keep:sk|score_counter:sc|maxcount[6] ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q             ;
; -0.834 ; 0.166        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q             ;
; -0.834 ; 0.166        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q             ;
; -0.813 ; 0.187        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q             ;
; -0.813 ; 0.187        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q             ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff1|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff2|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff3|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff4|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff5|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff6|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ;
; -0.737 ; 0.263        ; 1.000          ; Low Pulse Width  ; clk_SPD[0] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff7|q      ;
; -0.737 ; 0.263        ; 1.000          ; High Pulse Width ; clk_SPD[0] ; Rise       ; random_1:r1|press                          ;
+--------+--------------+----------------+------------------+------------+------------+--------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'CLOCK_50'                                                                                   ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock    ; Clock Edge ; Target                                   ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; CLOCK_50 ; Rise       ; CLOCK_50                                 ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[0]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[0]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[11] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[11] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[12] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[12] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[13] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[13] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[14] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[14] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[15] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[15] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[16] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[16] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[17] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[17] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[18] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[18] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[19] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[19] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[1]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[1]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[20] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[20] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[21] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[21] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[22] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[22] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[23] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[23] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[24] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[24] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[25] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[25] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[26] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[26] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[27] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[27] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[28] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[28] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[29] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[29] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[2]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[2]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[30] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[30] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[31] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[31] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[3]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[3]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[4]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[4]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[5]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[5]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[6]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[6]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[7]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[7]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[8]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[8]  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[9]  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; clock_divider:divider|divided_clocks[9]  ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; CLOCK_50|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; CLOCK_50|combout                         ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[0]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[10]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[10]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[11]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[11]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[12]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[12]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[13]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[13]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[14]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[14]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[15]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[15]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[16]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[16]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[17]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[17]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[18]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[18]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[19]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[19]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[1]|clk            ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[20]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[20]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[21]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[21]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[22]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[22]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[23]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; Low Pulse Width  ; CLOCK_50 ; Rise       ; divider|divided_clocks[23]|clk           ;
; 0.500  ; 0.500        ; 0.000          ; High Pulse Width ; CLOCK_50 ; Rise       ; divider|divided_clocks[24]|clk           ;
+--------+--------------+----------------+------------------+----------+------------+------------------------------------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock_divider:divider|divided_clocks[10]'                                                                                ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock                                    ; Clock Edge ; Target                                ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b0|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b1|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b2|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L0:light_0|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L1:light_1|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L2:light_2|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L3:light_3|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff0|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; bank:b3|L4:light_4|D_FF:dff1|q        ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff1|q             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff1|q             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff2|q             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff2|q             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff3|q             ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; counter_3b:ct|D_FF:dff3|q             ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff0|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff1|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff2|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff3|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff4|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff5|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff6|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff7|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|LFSR_9b:lfsr1|D_FF:dff8|q ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|press                     ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_0:r0|press                     ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock_divider:divider|divided_clocks[10] ; Rise       ; random_1:r1|LFSR_8b:lfsr1|D_FF:dff0|q ;
+--------+--------------+----------------+------------------+------------------------------------------+------------+---------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                                    ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; 0.062  ; 0.062  ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; 0.062  ; 0.062  ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; -0.014 ; -0.014 ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; -0.403 ; -0.403 ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; 0.032  ; 0.032  ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; 1.229  ; 1.229  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; 1.229  ; 1.229  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; 1.153  ; 1.153  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; 0.764  ; 0.764  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; 1.199  ; 1.199  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                                     ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; 1.157  ; 1.157  ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; 0.772  ; 0.772  ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; 0.723  ; 0.723  ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; 1.157  ; 1.157  ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; 0.773  ; 0.773  ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; -0.344 ; -0.344 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; -0.768 ; -0.768 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; -0.757 ; -0.757 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; -0.344 ; -0.344 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; -0.623 ; -0.623 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 8.171  ; 8.171  ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 7.397  ; 7.397  ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 7.151  ; 7.151  ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 7.478  ; 7.478  ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 8.171  ; 8.171  ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 8.558  ; 8.558  ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 7.722  ; 7.722  ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 7.888  ; 7.888  ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 8.478  ; 8.478  ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 8.558  ; 8.558  ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 11.303 ; 11.303 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 11.268 ; 11.268 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 11.103 ; 11.103 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 11.303 ; 11.303 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 11.294 ; 11.294 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 11.286 ; 11.286 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 11.089 ; 11.089 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 11.087 ; 11.087 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 11.518 ; 11.518 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 11.518 ; 11.518 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 11.361 ; 11.361 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 11.367 ; 11.367 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 11.364 ; 11.364 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 11.378 ; 11.378 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 11.516 ; 11.516 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 11.402 ; 11.402 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 11.006 ; 11.006 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 10.893 ; 10.893 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 10.859 ; 10.859 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 10.937 ; 10.937 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 10.931 ; 10.931 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 10.906 ; 10.906 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 11.001 ; 11.001 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 11.006 ; 11.006 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 11.124 ; 11.124 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 10.965 ; 10.965 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 11.099 ; 11.099 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 11.124 ; 11.124 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 10.993 ; 10.993 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 10.970 ; 10.970 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 10.841 ; 10.841 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 10.999 ; 10.999 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 6.775  ; 6.775  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 5.857  ; 5.857  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 5.671  ; 5.671  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 5.977  ; 5.977  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 6.775  ; 6.775  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 7.162  ; 7.162  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 6.182  ; 6.182  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 6.408  ; 6.408  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 6.977  ; 6.977  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 7.162  ; 7.162  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 4.579  ; 4.579  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 4.357  ; 4.357  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 4.378  ; 4.378  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 4.343  ; 4.343  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 4.237  ; 4.237  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 4.445  ; 4.445  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 4.579  ; 4.579  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 4.472  ; 4.472  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 4.363  ; 4.363  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 9.786  ; 9.786  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 9.751  ; 9.751  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 9.586  ; 9.586  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 9.786  ; 9.786  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 9.777  ; 9.777  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 9.769  ; 9.769  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 9.572  ; 9.572  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 9.570  ; 9.570  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 10.001 ; 10.001 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 10.001 ; 10.001 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 9.844  ; 9.844  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 9.850  ; 9.850  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 9.847  ; 9.847  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 9.861  ; 9.861  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 9.999  ; 9.999  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 9.885  ; 9.885  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 9.489  ; 9.489  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 9.376  ; 9.376  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 9.342  ; 9.342  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 9.420  ; 9.420  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 9.414  ; 9.414  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 9.389  ; 9.389  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 9.484  ; 9.484  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 9.489  ; 9.489  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 9.607  ; 9.607  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 9.448  ; 9.448  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 9.582  ; 9.582  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 9.607  ; 9.607  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 9.476  ; 9.476  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 9.453  ; 9.453  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 9.324  ; 9.324  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 9.482  ; 9.482  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                                ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise  ; Fall  ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 6.838 ; 6.838 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 7.024 ; 7.024 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 6.838 ; 6.838 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 7.144 ; 7.144 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 7.942 ; 7.942 ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 6.850 ; 6.850 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 6.850 ; 6.850 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 6.989 ; 6.989 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 7.083 ; 7.083 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 7.870 ; 7.870 ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 7.348 ; 7.348 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 7.348 ; 7.348 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 7.691 ; 7.691 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 7.393 ; 7.393 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 7.381 ; 7.381 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 7.374 ; 7.374 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 7.681 ; 7.681 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 7.675 ; 7.675 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 7.814 ; 7.814 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 7.659 ; 7.659 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 7.669 ; 7.669 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 7.813 ; 7.813 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 7.713 ; 7.713 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 7.079 ; 7.079 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 7.079 ; 7.079 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 7.353 ; 7.353 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 7.118 ; 7.118 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 7.117 ; 7.117 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 7.091 ; 7.091 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 7.502 ; 7.502 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 7.508 ; 7.508 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 7.578 ; 7.578 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 7.695 ; 7.695 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 7.842 ; 7.842 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 7.856 ; 7.856 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 7.736 ; 7.736 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 7.713 ; 7.713 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 7.578 ; 7.578 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 7.749 ; 7.749 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 3.947 ; 3.947 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 4.403 ; 4.403 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 4.207 ; 4.207 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 3.947 ; 3.947 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 4.116 ; 4.116 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 4.405 ; 4.405 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 4.405 ; 4.405 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 4.717 ; 4.717 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 4.563 ; 4.563 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 4.649 ; 4.649 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 4.011 ; 4.011 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 4.139 ; 4.139 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 4.125 ; 4.125 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 4.116 ; 4.116 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 4.011 ; 4.011 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 4.224 ; 4.224 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 4.419 ; 4.419 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 4.267 ; 4.267 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 4.133 ; 4.133 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 6.181 ; 6.181 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 6.181 ; 6.181 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 6.524 ; 6.524 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 6.226 ; 6.226 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 6.214 ; 6.214 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 6.207 ; 6.207 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 6.514 ; 6.514 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 6.508 ; 6.508 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 6.647 ; 6.647 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 6.492 ; 6.492 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 6.502 ; 6.502 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 6.646 ; 6.646 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 6.546 ; 6.546 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 5.912 ; 5.912 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 5.912 ; 5.912 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 6.186 ; 6.186 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 5.951 ; 5.951 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 5.950 ; 5.950 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 5.924 ; 5.924 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 6.335 ; 6.335 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 6.341 ; 6.341 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 6.411 ; 6.411 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 6.528 ; 6.528 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 6.675 ; 6.675 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 6.689 ; 6.689 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 6.569 ; 6.569 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 6.546 ; 6.546 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 6.411 ; 6.411 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 6.582 ; 6.582 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+


+------------------------------------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                                                        ;
+-------------------------------------------+----------+----------+----------+---------+---------------------+
; Clock                                     ; Setup    ; Hold     ; Recovery ; Removal ; Minimum Pulse Width ;
+-------------------------------------------+----------+----------+----------+---------+---------------------+
; Worst-case Slack                          ; -5.768   ; -3.122   ; N/A      ; N/A     ; -1.631              ;
;  CLOCK_50                                 ; -3.714   ; -2.773   ; N/A      ; N/A     ; -1.631              ;
;  clk_SPD[0]                               ; -3.319   ; -3.122   ; N/A      ; N/A     ; -1.631              ;
;  clock_divider:divider|divided_clocks[10] ; -5.768   ; 0.105    ; N/A      ; N/A     ; -0.611              ;
; Design-wide TNS                           ; -567.726 ; -239.297 ; 0.0      ; 0.0     ; -463.032            ;
;  CLOCK_50                                 ; -71.454  ; -29.705  ; N/A      ; N/A     ; -40.735             ;
;  clk_SPD[0]                               ; -140.267 ; -209.592 ; N/A      ; N/A     ; -311.095            ;
;  clock_divider:divider|divided_clocks[10] ; -356.005 ; 0.000    ; N/A      ; N/A     ; -111.202            ;
+-------------------------------------------+----------+----------+----------+---------+---------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Setup Times                                                                                                                    ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; 0.062  ; 0.062  ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; 0.062  ; 0.062  ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; -0.014 ; -0.014 ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; -0.403 ; -0.403 ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; 0.032  ; 0.032  ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; 1.839  ; 1.839  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; 1.534  ; 1.534  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; 1.452  ; 1.452  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; 0.764  ; 0.764  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; 1.839  ; 1.839  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Hold Times                                                                                                                     ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; KEY[*]    ; clk_SPD[0]                               ; 3.677  ; 3.677  ; Rise       ; clk_SPD[0]                               ;
;  KEY[0]   ; clk_SPD[0]                               ; 2.958  ; 2.958  ; Rise       ; clk_SPD[0]                               ;
;  KEY[1]   ; clk_SPD[0]                               ; 2.854  ; 2.854  ; Rise       ; clk_SPD[0]                               ;
;  KEY[2]   ; clk_SPD[0]                               ; 3.677  ; 3.677  ; Rise       ; clk_SPD[0]                               ;
;  KEY[3]   ; clk_SPD[0]                               ; 2.674  ; 2.674  ; Rise       ; clk_SPD[0]                               ;
; KEY[*]    ; clock_divider:divider|divided_clocks[10] ; 0.275  ; 0.275  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[0]   ; clock_divider:divider|divided_clocks[10] ; -0.481 ; -0.481 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[1]   ; clock_divider:divider|divided_clocks[10] ; -0.477 ; -0.477 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[2]   ; clock_divider:divider|divided_clocks[10] ; 0.275  ; 0.275  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  KEY[3]   ; clock_divider:divider|divided_clocks[10] ; -0.400 ; -0.400 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+--------------------------------------------------------------------------------------------------------------------------------+
; Clock to Output Times                                                                                                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise   ; Fall   ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 18.208 ; 18.208 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 16.397 ; 16.397 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 15.791 ; 15.791 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 16.622 ; 16.622 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 18.208 ; 18.208 ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 19.333 ; 19.333 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 17.178 ; 17.178 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 17.863 ; 17.863 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 19.333 ; 19.333 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 19.117 ; 19.117 ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 26.979 ; 26.979 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 26.948 ; 26.948 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 26.466 ; 26.466 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 26.935 ; 26.935 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 26.979 ; 26.979 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 26.975 ; 26.975 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 26.468 ; 26.468 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 26.470 ; 26.470 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 27.553 ; 27.553 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 27.553 ; 27.553 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 27.144 ; 27.144 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 27.145 ; 27.145 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 27.189 ; 27.189 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 27.168 ; 27.168 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 27.513 ; 27.513 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 27.227 ; 27.227 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 26.448 ; 26.448 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 26.173 ; 26.173 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 26.075 ; 26.075 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 26.234 ; 26.234 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 26.237 ; 26.237 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 26.211 ; 26.211 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 26.414 ; 26.414 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 26.448 ; 26.448 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 26.351 ; 26.351 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 26.178 ; 26.178 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 26.315 ; 26.315 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 26.351 ; 26.351 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 26.224 ; 26.224 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 26.148 ; 26.148 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 25.804 ; 25.804 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 26.220 ; 26.220 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 15.134 ; 15.134 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 12.958 ; 12.958 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 12.460 ; 12.460 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 13.220 ; 13.220 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 15.134 ; 15.134 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 16.043 ; 16.043 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 13.739 ; 13.739 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 14.532 ; 14.532 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 15.931 ; 15.931 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 16.043 ; 16.043 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 9.251  ; 9.251  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 8.786  ; 8.786  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 8.592  ; 8.592  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 8.759  ; 8.759  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 8.419  ; 8.419  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 8.871  ; 8.871  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 9.251  ; 9.251  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 9.091  ; 9.091  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 8.757  ; 8.757  ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 23.555 ; 23.555 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 23.524 ; 23.524 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 23.042 ; 23.042 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 23.511 ; 23.511 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 23.555 ; 23.555 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 23.551 ; 23.551 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 23.044 ; 23.044 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 23.046 ; 23.046 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 24.129 ; 24.129 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 24.129 ; 24.129 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 23.720 ; 23.720 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 23.721 ; 23.721 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 23.765 ; 23.765 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 23.744 ; 23.744 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 24.089 ; 24.089 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 23.803 ; 23.803 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 23.024 ; 23.024 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 22.749 ; 22.749 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 22.651 ; 22.651 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 22.810 ; 22.810 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 22.813 ; 22.813 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 22.787 ; 22.787 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 22.990 ; 22.990 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 23.024 ; 23.024 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 22.927 ; 22.927 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 22.754 ; 22.754 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 22.891 ; 22.891 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 22.927 ; 22.927 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 22.800 ; 22.800 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 22.724 ; 22.724 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 22.380 ; 22.380 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 22.796 ; 22.796 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+--------+--------+------------+------------------------------------------+


+------------------------------------------------------------------------------------------------------------------------------+
; Minimum Clock to Output Times                                                                                                ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+
; Data Port ; Clock Port                               ; Rise  ; Fall  ; Clock Edge ; Clock Reference                          ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+
; Col_G[*]  ; clk_SPD[0]                               ; 6.838 ; 6.838 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[0] ; clk_SPD[0]                               ; 7.024 ; 7.024 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[1] ; clk_SPD[0]                               ; 6.838 ; 6.838 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[2] ; clk_SPD[0]                               ; 7.144 ; 7.144 ; Rise       ; clk_SPD[0]                               ;
;  Col_G[3] ; clk_SPD[0]                               ; 7.942 ; 7.942 ; Rise       ; clk_SPD[0]                               ;
; Col_R[*]  ; clk_SPD[0]                               ; 6.850 ; 6.850 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[0] ; clk_SPD[0]                               ; 6.850 ; 6.850 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[1] ; clk_SPD[0]                               ; 6.989 ; 6.989 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[2] ; clk_SPD[0]                               ; 7.083 ; 7.083 ; Rise       ; clk_SPD[0]                               ;
;  Col_R[3] ; clk_SPD[0]                               ; 7.870 ; 7.870 ; Rise       ; clk_SPD[0]                               ;
; hex0[*]   ; clk_SPD[0]                               ; 7.348 ; 7.348 ; Rise       ; clk_SPD[0]                               ;
;  hex0[0]  ; clk_SPD[0]                               ; 7.348 ; 7.348 ; Rise       ; clk_SPD[0]                               ;
;  hex0[1]  ; clk_SPD[0]                               ; 7.691 ; 7.691 ; Rise       ; clk_SPD[0]                               ;
;  hex0[2]  ; clk_SPD[0]                               ; 7.393 ; 7.393 ; Rise       ; clk_SPD[0]                               ;
;  hex0[3]  ; clk_SPD[0]                               ; 7.381 ; 7.381 ; Rise       ; clk_SPD[0]                               ;
;  hex0[4]  ; clk_SPD[0]                               ; 7.374 ; 7.374 ; Rise       ; clk_SPD[0]                               ;
;  hex0[5]  ; clk_SPD[0]                               ; 7.681 ; 7.681 ; Rise       ; clk_SPD[0]                               ;
;  hex0[6]  ; clk_SPD[0]                               ; 7.675 ; 7.675 ; Rise       ; clk_SPD[0]                               ;
; hex1[*]   ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[0]  ; clk_SPD[0]                               ; 7.814 ; 7.814 ; Rise       ; clk_SPD[0]                               ;
;  hex1[1]  ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[2]  ; clk_SPD[0]                               ; 7.651 ; 7.651 ; Rise       ; clk_SPD[0]                               ;
;  hex1[3]  ; clk_SPD[0]                               ; 7.659 ; 7.659 ; Rise       ; clk_SPD[0]                               ;
;  hex1[4]  ; clk_SPD[0]                               ; 7.669 ; 7.669 ; Rise       ; clk_SPD[0]                               ;
;  hex1[5]  ; clk_SPD[0]                               ; 7.813 ; 7.813 ; Rise       ; clk_SPD[0]                               ;
;  hex1[6]  ; clk_SPD[0]                               ; 7.713 ; 7.713 ; Rise       ; clk_SPD[0]                               ;
; hex2[*]   ; clk_SPD[0]                               ; 7.079 ; 7.079 ; Rise       ; clk_SPD[0]                               ;
;  hex2[0]  ; clk_SPD[0]                               ; 7.079 ; 7.079 ; Rise       ; clk_SPD[0]                               ;
;  hex2[1]  ; clk_SPD[0]                               ; 7.353 ; 7.353 ; Rise       ; clk_SPD[0]                               ;
;  hex2[2]  ; clk_SPD[0]                               ; 7.118 ; 7.118 ; Rise       ; clk_SPD[0]                               ;
;  hex2[3]  ; clk_SPD[0]                               ; 7.117 ; 7.117 ; Rise       ; clk_SPD[0]                               ;
;  hex2[4]  ; clk_SPD[0]                               ; 7.091 ; 7.091 ; Rise       ; clk_SPD[0]                               ;
;  hex2[5]  ; clk_SPD[0]                               ; 7.502 ; 7.502 ; Rise       ; clk_SPD[0]                               ;
;  hex2[6]  ; clk_SPD[0]                               ; 7.508 ; 7.508 ; Rise       ; clk_SPD[0]                               ;
; hex3[*]   ; clk_SPD[0]                               ; 7.578 ; 7.578 ; Rise       ; clk_SPD[0]                               ;
;  hex3[0]  ; clk_SPD[0]                               ; 7.695 ; 7.695 ; Rise       ; clk_SPD[0]                               ;
;  hex3[1]  ; clk_SPD[0]                               ; 7.842 ; 7.842 ; Rise       ; clk_SPD[0]                               ;
;  hex3[2]  ; clk_SPD[0]                               ; 7.856 ; 7.856 ; Rise       ; clk_SPD[0]                               ;
;  hex3[3]  ; clk_SPD[0]                               ; 7.736 ; 7.736 ; Rise       ; clk_SPD[0]                               ;
;  hex3[4]  ; clk_SPD[0]                               ; 7.713 ; 7.713 ; Rise       ; clk_SPD[0]                               ;
;  hex3[5]  ; clk_SPD[0]                               ; 7.578 ; 7.578 ; Rise       ; clk_SPD[0]                               ;
;  hex3[6]  ; clk_SPD[0]                               ; 7.749 ; 7.749 ; Rise       ; clk_SPD[0]                               ;
; Col_G[*]  ; clock_divider:divider|divided_clocks[10] ; 3.947 ; 3.947 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[0] ; clock_divider:divider|divided_clocks[10] ; 4.403 ; 4.403 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[1] ; clock_divider:divider|divided_clocks[10] ; 4.207 ; 4.207 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[2] ; clock_divider:divider|divided_clocks[10] ; 3.947 ; 3.947 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_G[3] ; clock_divider:divider|divided_clocks[10] ; 4.116 ; 4.116 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Col_R[*]  ; clock_divider:divider|divided_clocks[10] ; 4.405 ; 4.405 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[0] ; clock_divider:divider|divided_clocks[10] ; 4.405 ; 4.405 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[1] ; clock_divider:divider|divided_clocks[10] ; 4.717 ; 4.717 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[2] ; clock_divider:divider|divided_clocks[10] ; 4.563 ; 4.563 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Col_R[3] ; clock_divider:divider|divided_clocks[10] ; 4.649 ; 4.649 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; Row[*]    ; clock_divider:divider|divided_clocks[10] ; 4.011 ; 4.011 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[0]   ; clock_divider:divider|divided_clocks[10] ; 4.139 ; 4.139 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[1]   ; clock_divider:divider|divided_clocks[10] ; 4.125 ; 4.125 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[2]   ; clock_divider:divider|divided_clocks[10] ; 4.116 ; 4.116 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[3]   ; clock_divider:divider|divided_clocks[10] ; 4.011 ; 4.011 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[4]   ; clock_divider:divider|divided_clocks[10] ; 4.224 ; 4.224 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[5]   ; clock_divider:divider|divided_clocks[10] ; 4.419 ; 4.419 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[6]   ; clock_divider:divider|divided_clocks[10] ; 4.267 ; 4.267 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  Row[7]   ; clock_divider:divider|divided_clocks[10] ; 4.133 ; 4.133 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex0[*]   ; clock_divider:divider|divided_clocks[10] ; 6.181 ; 6.181 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[0]  ; clock_divider:divider|divided_clocks[10] ; 6.181 ; 6.181 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[1]  ; clock_divider:divider|divided_clocks[10] ; 6.524 ; 6.524 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[2]  ; clock_divider:divider|divided_clocks[10] ; 6.226 ; 6.226 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[3]  ; clock_divider:divider|divided_clocks[10] ; 6.214 ; 6.214 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[4]  ; clock_divider:divider|divided_clocks[10] ; 6.207 ; 6.207 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[5]  ; clock_divider:divider|divided_clocks[10] ; 6.514 ; 6.514 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex0[6]  ; clock_divider:divider|divided_clocks[10] ; 6.508 ; 6.508 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex1[*]   ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[0]  ; clock_divider:divider|divided_clocks[10] ; 6.647 ; 6.647 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[1]  ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[2]  ; clock_divider:divider|divided_clocks[10] ; 6.484 ; 6.484 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[3]  ; clock_divider:divider|divided_clocks[10] ; 6.492 ; 6.492 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[4]  ; clock_divider:divider|divided_clocks[10] ; 6.502 ; 6.502 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[5]  ; clock_divider:divider|divided_clocks[10] ; 6.646 ; 6.646 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex1[6]  ; clock_divider:divider|divided_clocks[10] ; 6.546 ; 6.546 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex2[*]   ; clock_divider:divider|divided_clocks[10] ; 5.912 ; 5.912 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[0]  ; clock_divider:divider|divided_clocks[10] ; 5.912 ; 5.912 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[1]  ; clock_divider:divider|divided_clocks[10] ; 6.186 ; 6.186 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[2]  ; clock_divider:divider|divided_clocks[10] ; 5.951 ; 5.951 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[3]  ; clock_divider:divider|divided_clocks[10] ; 5.950 ; 5.950 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[4]  ; clock_divider:divider|divided_clocks[10] ; 5.924 ; 5.924 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[5]  ; clock_divider:divider|divided_clocks[10] ; 6.335 ; 6.335 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex2[6]  ; clock_divider:divider|divided_clocks[10] ; 6.341 ; 6.341 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
; hex3[*]   ; clock_divider:divider|divided_clocks[10] ; 6.411 ; 6.411 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[0]  ; clock_divider:divider|divided_clocks[10] ; 6.528 ; 6.528 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[1]  ; clock_divider:divider|divided_clocks[10] ; 6.675 ; 6.675 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[2]  ; clock_divider:divider|divided_clocks[10] ; 6.689 ; 6.689 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[3]  ; clock_divider:divider|divided_clocks[10] ; 6.569 ; 6.569 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[4]  ; clock_divider:divider|divided_clocks[10] ; 6.546 ; 6.546 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[5]  ; clock_divider:divider|divided_clocks[10] ; 6.411 ; 6.411 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
;  hex3[6]  ; clock_divider:divider|divided_clocks[10] ; 6.582 ; 6.582 ; Rise       ; clock_divider:divider|divided_clocks[10] ;
+-----------+------------------------------------------+-------+-------+------------+------------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------------+
; Setup Transfers                                                                                                                 ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
; From Clock                               ; To Clock                                 ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
; clk_SPD[0]                               ; clk_SPD[0]                               ; 683      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]                               ; 683      ; 0        ; 0        ; 0        ;
; CLOCK_50                                 ; CLOCK_50                                 ; 506      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; CLOCK_50                                 ; 22       ; 22       ; 0        ; 0        ;
; clk_SPD[0]                               ; clock_divider:divider|divided_clocks[10] ; 683      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 689      ; 0        ; 0        ; 0        ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+---------------------------------------------------------------------------------------------------------------------------------+
; Hold Transfers                                                                                                                  ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
; From Clock                               ; To Clock                                 ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
; clk_SPD[0]                               ; clk_SPD[0]                               ; 683      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; clk_SPD[0]                               ; 683      ; 0        ; 0        ; 0        ;
; CLOCK_50                                 ; CLOCK_50                                 ; 506      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; CLOCK_50                                 ; 22       ; 22       ; 0        ; 0        ;
; clk_SPD[0]                               ; clock_divider:divider|divided_clocks[10] ; 683      ; 0        ; 0        ; 0        ;
; clock_divider:divider|divided_clocks[10] ; clock_divider:divider|divided_clocks[10] ; 689      ; 0        ; 0        ; 0        ;
+------------------------------------------+------------------------------------------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 5     ; 5    ;
; Unconstrained Input Port Paths  ; 123   ; 123  ;
; Unconstrained Output Ports      ; 44    ; 44   ;
; Unconstrained Output Port Paths ; 254   ; 254  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Fri May 30 19:31:19 2014
Info: Command: quartus_sta dancedance -c dancedance
Info: qsta_default_script.tcl version: #1
Warning (20028): Parallel compilation is not licensed and has been disabled
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'dancedance.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clk_SPD[0] clk_SPD[0]
    Info (332105): create_clock -period 1.000 -name CLOCK_50 CLOCK_50
    Info (332105): create_clock -period 1.000 -name clock_divider:divider|divided_clocks[10] clock_divider:divider|divided_clocks[10]
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux4~0  from: datac  to: combout
    Info (332098): Cell: Mux4~10  from: datac  to: combout
    Info (332098): Cell: Mux4~11  from: datac  to: combout
    Info (332098): Cell: Mux4~12  from: datad  to: combout
    Info (332098): Cell: Mux4~13  from: datad  to: combout
    Info (332098): Cell: Mux4~14  from: datad  to: combout
    Info (332098): Cell: Mux4~15  from: datad  to: combout
    Info (332098): Cell: Mux4~1  from: datac  to: combout
    Info (332098): Cell: Mux4~2  from: dataa  to: combout
    Info (332098): Cell: Mux4~3  from: datac  to: combout
    Info (332098): Cell: Mux4~4  from: datad  to: combout
    Info (332098): Cell: Mux4~5  from: datad  to: combout
    Info (332098): Cell: Mux4~6  from: datac  to: combout
    Info (332098): Cell: Mux4~7  from: datac  to: combout
    Info (332098): Cell: Mux4~8  from: datab  to: combout
    Info (332098): Cell: Mux4~9  from: datac  to: combout
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -5.768
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -5.768      -356.005 clock_divider:divider|divided_clocks[10] 
    Info (332119):    -3.714       -71.454 CLOCK_50 
    Info (332119):    -3.319      -140.267 clk_SPD[0] 
Info (332146): Worst-case hold slack is -3.122
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.122      -209.592 clk_SPD[0] 
    Info (332119):    -2.773       -29.705 CLOCK_50 
    Info (332119):     0.317         0.000 clock_divider:divider|divided_clocks[10] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631      -311.095 clk_SPD[0] 
    Info (332119):    -1.631       -40.735 CLOCK_50 
    Info (332119):    -0.611      -111.202 clock_divider:divider|divided_clocks[10] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Info (332097): The following timing edges are non-unate.  TimeQuest will assume pos-unate behavior for these edges in the clock network.
    Info (332098): Cell: Mux4~0  from: datac  to: combout
    Info (332098): Cell: Mux4~10  from: datac  to: combout
    Info (332098): Cell: Mux4~11  from: datac  to: combout
    Info (332098): Cell: Mux4~12  from: datad  to: combout
    Info (332098): Cell: Mux4~13  from: datad  to: combout
    Info (332098): Cell: Mux4~14  from: datad  to: combout
    Info (332098): Cell: Mux4~15  from: datad  to: combout
    Info (332098): Cell: Mux4~1  from: datac  to: combout
    Info (332098): Cell: Mux4~2  from: dataa  to: combout
    Info (332098): Cell: Mux4~3  from: datac  to: combout
    Info (332098): Cell: Mux4~4  from: datad  to: combout
    Info (332098): Cell: Mux4~5  from: datad  to: combout
    Info (332098): Cell: Mux4~6  from: datac  to: combout
    Info (332098): Cell: Mux4~7  from: datac  to: combout
    Info (332098): Cell: Mux4~8  from: datab  to: combout
    Info (332098): Cell: Mux4~9  from: datac  to: combout
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -1.900
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.900      -103.214 clock_divider:divider|divided_clocks[10] 
    Info (332119):    -0.960       -11.500 CLOCK_50 
    Info (332119):    -0.733       -15.237 clk_SPD[0] 
Info (332146): Worst-case hold slack is -1.435
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.435       -98.293 clk_SPD[0] 
    Info (332119):    -1.434       -18.866 CLOCK_50 
    Info (332119):     0.105         0.000 clock_divider:divider|divided_clocks[10] 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380      -139.398 clk_SPD[0] 
    Info (332119):    -1.380       -33.380 CLOCK_50 
    Info (332119):    -0.500       -91.000 clock_divider:divider|divided_clocks[10] 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 4 warnings
    Info: Peak virtual memory: 417 megabytes
    Info: Processing ended: Fri May 30 19:31:21 2014
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


